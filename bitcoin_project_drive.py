# -*- coding: utf-8 -*-
"""Bitcoin_Project_Drive.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Kur_EcMiSXLLaIZZz-LVWeZGRttH6ywj
"""

#Description

#import libraries
import tweepy
from textblob import TextBlob
import pandas as pd
import numpy as np
import re
import csv
import matplotlib.pyplot as plt
plt.style.use('fivethirtyeight')

consumer_key = '9sI**********'
consumer_secret = 'Fz****************************'
access_token = '12**************************************'
access_token_secret = 'Nk***********************************'
auth = tweepy.OAuthHandler(consumer_key,consumer_secret)
auth.set_access_token(access_token,access_token_secret)
api=tweepy.API(auth)

search_term =  '#bitcoin -filter:retweets'
tweets = tweepy.Cursor(api.search, q=search_term, lang='en', since='2019-11-01', tweet_mode='extended').items(8000)
all_tweets=[tweet.full_text for tweet in tweets]

df = pd.DataFrame(all_tweets, columns=['Tweets'])
df.head(2000)

def cleanTwt(twt):
  twt = re.sub('#bitcoin','bitcoin',twt)
  twt = re.sub('#Bitcoin','Bitcoin',twt)
  twt = re.sub('#[A-Za-z0-9]+','',twt)
  twt = re.sub('\\n','',twt)
  twt = re.sub('https?:\/\/\S+','',twt)
  return twt

df['Cleaned_Tweets'] = df['Tweets'].apply(cleanTwt)
df.head()

def getSubjectivity(twt):
  return TextBlob(twt).sentiment.subjectivity

def getPolarity(twt):
  return TextBlob(twt).sentiment.polarity

df['Subjectivity'] = df['Cleaned_Tweets'].apply(getSubjectivity)
df['Polarity'] = df['Cleaned_Tweets'].apply(getPolarity)

df.head()

def getSentiment(score):
  if score<0:
    return 'Negative'
  elif score == 0:
    return 'Neutral'
  else:
      return 'Positive'

df['Sentiment'] = df['Polarity'].apply(getSentiment)
df.head(2000)

plt.figure(figsize=(8,6))
for i in range(0, df.shape[0]):
  plt.scatter(df['Polarity'][i], df['Subjectivity'][i], color='Purple')
plt.title('Sentiment Analysis Scatter Plot')
plt.xlabel('Ploarity')
plt.ylabel('Subjectivity')
plt.show()

df['Sentiment'].value_counts().plot(kind='bar')
plt.title('Sentiment Analysis Bar Plot')
plt.xlabel('Sentiment')
plt.ylabel('Polarity')
plt.show()









